Input: 
                  10
                /    \
               8      2
             /      /   \
            3      3     6
                    \
                     4
and budget = 8
Output: 2
Explanation:
Cost For visiting Leaf Node 3: 3
Cost For visiting Leaf Node 4: 4
Cost For visiting Leaf Node 6: 3
In budget 8 one can visit Max 2 Leaf Nodes.
Code:

int getCount(Node *root, int k)
    {
        int count=0;
        int sum=0;
        vector<int>ans;
        queue<pair<Node*,int>>q;
        q.push({root,1});
        while(!q.empty()){
           Node*temp=q.front().first;
           int level=q.front().second;
           q.pop();
           if(temp->left==NULL && temp->right==NULL){
               ans.push_back(level);
               count++;
               sum=sum+level;
               if(sum==k){
                   return count;
               }
               if(sum>k){
                   return count-1;
               }
           }
           if(temp->left){
               q.push({temp->left,level+1});
           }
           if(temp->right){
               q.push({temp->right,level+1});
           }
        }
        return count;
    }
