Input: inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]
Output: [3,9,20,null,null,15,7]
CODE:

unordered_map<int,int> mp;
    void mapping(vector<int>& inorder,int &size){
        for(int i=0;i<size;i++){
            mp[inorder[i]]=i;
        }
    }
    TreeNode* solve(vector<int>& inorder, vector<int>& postorder,int &postindex,int inorderstart,int inorderend){
       if((postindex<0)||(inorderstart>inorderend))
            return NULL;
        
        int ele=postorder[postindex];
        postindex--;
        int pos=mp[ele];
        TreeNode* root=new TreeNode(ele);
        root->right=solve(inorder,postorder,postindex,pos+1,inorderend);
        root->left=solve(inorder,postorder,postindex,inorderstart,pos-1);
        return root;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        unordered_map<int,int>mp;
        int size=inorder.size();
        int postindex=size-1,end=size-1,start=0;
        mapping(inorder,size);
        return solve(inorder,postorder,postindex,start,end);
    }
   
