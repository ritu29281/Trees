Input:
             10
          /      \
        -2        6
       /   \     /  \
     8     -4   7    5

Output:
            20
          /    \
        4        12
       /  \     /  \
     0     0   0    0

Explanation:

           (4-2+12+6)
          /           \
      (8-4)          (7+5)
       /   \         /  \
      0     0       0    0
CODE:

int solve(Node* root){
      if(root==NULL) return 0;
      if(root->left==NULL && root->right==NULL) {
          int curr=root->data;
          root->data=0;
          return curr;
      }
      int lsum=solve(root->left);
      int rsum=solve(root->right);
      int temp=root->data;
      root->data=lsum+rsum;
      return root->data+temp;
  }
  
    // Convert a given tree to a tree where every node contains sum of values of
    // nodes in left and right subtrees in the original tree
    void toSumTree(Node *node)
    {
       solve(node);
    }
